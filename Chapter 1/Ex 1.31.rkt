#lang racket

; Упражнение 1.31.
; а. Процедура sum — всего лишь простейшая из обширного множества подобных абстракций,
; которые можно выразить через процедуры высших порядков.51. Напишите аналогичную процедуру
; под названием product, которая вычисляет произведение значений функции в точках на указан-
; ном интервале. Покажите, как с помощью этой процедуры определить factorial. Кроме того,
; при помощи product вычислите приближенное значение Pi по формуле
; pi/4 =
; 2 · 4 · 4 · 6 · 6 · 8 · · ·
; -   -   -   -   -   -   -  
; 3 · 3 · 5 · 5 · 7 · 7 · · ·
;-------------------------------------------------------------------
; Определим процедуру product, порождающую рекурсивный процесс:
(define (product term a next b)
  (if (> a b)
      1
      (* (term a)
         (product term (next a) next b))))
;-------------------------------------------------------------------
; Найдем с ее помощью факториал
(define (identity x) x)
(define (inc x) (+ x 1))

(product identity 1 inc 5)
;-------------------------------------------------------------------
; Сравним с оригинальной функцией факториала:
(define (factorial n)
  (if (= n 1)
      1
      (* n (factorial (- n 1)))))

(= (product identity 1 inc 5) (factorial 5))
(= (product identity 1 inc 10) (factorial 10))

;-------------------------------------------------------------------
; Кроме того,
; при помощи product вычислите приближенное значение Pi по формуле
; pi/4 =
; 2 · 4 · 4 · 6 · 6 · 8 · · ·
; -   -   -   -   -   -   -  
; 3 · 3 · 5 · 5 · 7 · 7 · · ·
;-------------------------------------------------------------------
; Считает неправильно:
(define (pi-4 a b)
  (define (pi-4-term x)
    (* (/ x (+ x 1))
       (/ (+ x 2) (+ x 1))))
  (define (pi-4-next x)
    (+ x 2))
  (product pi-4-term
           a
           pi-4-next
           b))

(/ (pi-4 1.0 1000) 4)

;-------------------------------------------------------------------
; б. Если Ваша процедура product порождает рекурсивный процесс, перепишите ее так, чтобы
; она порождала итеративный. Если она порождает итеративный процесс, перепишите ее так, чтобы
; она порождала рекурсивный.
;-------------------------------------------------------------------
(define (product2 term a next b)
  (define (product-iter a result)
    (if (> a b)
        result
        (product-iter (next a) (* result (term a)))))
  (product-iter a 1))
;-------------------------------------------------------------------
(= (product2 identity 1 inc 5) (factorial 5))
(= (product2 identity 1 inc 10) (factorial 10))
;===================================================================