#lang racket

; Упражнение 1.36.
; Измените процедуру fixed-point так, чтобы она печатала последовательность приближений,
; которые порождает, с помощью примитивов newline и display, показанных в упражне-
; нии 1.22. Затем найдите решение уравнения xx = 1000 путем поиска неподвижной точки
; x 7→ log(1000)/ log(x). (Используйте встроенную процедуру Scheme log, которая вычисляет на-
; туральные логарифмы.) Посчитайте, сколько шагов это занимает при использовании торможения
; усреднением и без него. (Учтите, что нельзя начинать fixed-point со значения 1, поскольку это
; вызовет деление на log(1) = 0.)
;------------------------------------------------------------------
(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (let ((next (f guess)))
      (display next)
      (newline)
      (if (close-enough? guess next)
          next
          (try next))))
(try first-guess))
;------------------------------------------------------------------
(fixed-point (lambda (x) (/ (log 1000) (log x)))
             2.0)
;==================================================================